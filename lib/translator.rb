require "pry"
# letters = {"a"=> ["0.\n..\n..\n"], "b" => ["0.\n0.\n0.\n"]}
#
#
# puts letters['a']




# + letters['b'].join('\n')

# letters = {"a" => ["0.\n..\n.."], "b" => "0.\n0.\n0.."}

# p letters.keys[0]


# def braille_letters
#
letters = {"a" => ["0.","..",".."], "b" => ["0.","0.",".."], "c" => ["00","..",".."], "d" => ["00",".0",".."],
     "e" => ["0.",".0",".."], "f" => ["00","0.",".."], "g" => ["00","00",".."], "h" => ["0.","00",".."],
     "i" => [".0","0.",".."], "j" => [".0","00",".."], "k" => ["0.","..","0."], "l" => ["0.","0.","0."],
     "m" => ["00","..","0."], "n" => ["0.",".0","0."], "o" => ["0.",".0","0."], "p" => ["00","0.","0."],
     "r" => ["0.","00","0."], "s" => [".0","0.","0."], "t" => [".0","00","0."], "u" => ["0.","..","00"],
     "v" => ["0.","0.","00"], "w" => [".0","00",".0"], "x" => ["00","..","00"], "y" => ["00",".0","00"],
     "z" => ["0.",".0","00"], "!" => ["..","00","0."], "'" => ["..","..","0."], "," => ["..","0.",".."],
     "-" => ["..","..","00"], "." => ["..","00",".0"], "?" => ["..","0.","00"], "capitals" => ["..", "..", ".0"],
     "numbers" => [".0", ".0", "00"], " " => ["..","..",".."]}

input = gets.chomp.to_s.split(//)
input_index = 0
binding.pry
def first_letter
until (input_index + 1) >= input.length

  braille_word =[]
  letters.select do |key, value|
    input[input_index] == key
      braille_word << value
      input_index += 1
    end
end
# binding.pry
puts braille_word

end
